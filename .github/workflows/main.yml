name: Continuous Integration on develop branch
on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
env:
  SOURCE_ARTIFACT: source

jobs:
  create-source-distribution:
    name: Create Source Distribution
    runs-on: ubuntu-20.04
    env:
      ARTIFACT_DIR: ./source
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Required Packages
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libtool autotools-dev automake pkg-config \
          libssl-dev libevent-dev bsdmainutils python3 \
          libboost-all-dev \
          libdb5.3-dev libdb5.3++-dev \
          libminiupnpc-dev \
          libzmq3-dev \
          libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools \
          libprotobuf-dev protobuf-compiler libqrencode-dev
      - name: Create Distribution Tarball
        run: |
          ./autogen.sh
          ./configure --with-incompatible-bdb --with-miniupnpc
          make dist
      - name: Download Dependencies
        run: make -C depends download
      - name: Create Dependencies Tarball
        run: tar -czf depends.tar.gz depends
      - name: Prepare Files for Artifact
        run: |
          mkdir -p $ARTIFACT_DIR
          mv depends.tar.gz cyberdollar-*.tar.gz $ARTIFACT_DIR
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SOURCE_ARTIFACT }}
          path: ${{ env.ARTIFACT_DIR }}

  build-linux:
    name: Build for Linux
    needs: create-source-distribution
    runs-on: ubuntu-20.04
    env:
      ARTIFACT_DIR: linux-binaries
    steps:
      - name: Getting Source
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.SOURCE_ARTIFACT }}
      - name: Extract Archives
        run: |
          tar -xzf depends.tar.gz
          tar -xzf cyberdollar-*.tar.gz --strip-components=1
        working-directory: ${{ env.SOURCE_ARTIFACT }}
      - name: Install Required Packages
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-zmq
      - name: Build Dependencies
        run: make -C depends -j$(nproc)
        working-directory: ${{ env.SOURCE_ARTIFACT }}
      - name: Build cyberdollar
        run: |
          ./configure --prefix=$(realpath depends/x86_64-pc-linux-gnu)
          make -j$(nproc)
        working-directory: ${{ env.SOURCE_ARTIFACT }}
      - name: Prepare Files for Artifact
        run: |
          mkdir -p $ARTIFACT_DIR
          mv $SOURCE_ARTIFACT/src/{cyberdollar-cli,cyberdollar-tx,cyberdollard,qt/cyberdollar-qt} $ARTIFACT_DIR
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-binaries
          path: ${{ env.ARTIFACT_DIR }}

  build-windows:
    name: Build for Windows
    needs: create-source-distribution
    runs-on: ubuntu-20.04
    env:
      ARTIFACT_DIR: windows-binaries
    steps:
      - name: Getting Source
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.SOURCE_ARTIFACT }}
      - name: Extract Archives
        run: |
          tar -xzf depends.tar.gz
          tar -xzf cyberdollar-*.tar.gz --strip-components=1
        working-directory: ${{ env.SOURCE_ARTIFACT }}
      - name: Install Required Packages
        run: |
          sudo apt-get update
          sudo apt-get install -y g++-mingw-w64-x86-64 gcc-mingw-w64-x86-64
      - name: Switch MinGW GCC and G++ to POSIX Threading
        run: |
          sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
      - name: Build Dependencies
        run: make -C depends -j$(nproc) HOST=x86_64-w64-mingw32
        working-directory: ${{ env.SOURCE_ARTIFACT }}
      - name: Build cyberdollar
        run: |
          ./configure --prefix=$(realpath depends/x86_64-w64-mingw32)
          make -j$(nproc)
        working-directory: ${{ env.SOURCE_ARTIFACT }}
      - name: Prepare Files for Artifact
        run: |
          mkdir -p $ARTIFACT_DIR
          mv $SOURCE_ARTIFACT/src/{cyberdollar-cli.exe,cyberdollar-tx.exe,cyberdollard.exe,qt/cyberdollar-qt.exe} $ARTIFACT_DIR
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-binaries
          path: ${{ env.ARTIFACT_DIR }}

  build-macos:
    name: Build for MacOS
    needs: create-source-distribution
    runs-on: ubuntu-20.04
    env:
      name: x86_64-macos
      host: x86_64-apple-darwin11
      packages: cmake imagemagick libcap-dev librsvg2-bin libz-dev libtiff-tools libtinfo5 python3-setuptools xorriso
    steps:
      - name: Install Packages
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libtool autotools-dev automake pkg-config bsdmainutils \
          curl ccache python3 rsync git procps bison ${{ env.packages }}
      - name: SDK Cache
        uses: actions/cache@v2
        with:
          path: ./depends/sdk-sources
          key: macos-sdk
      - name: Install SDK
        run: |
          mkdir -p ./depends/SDKs
          curl -L -o depends/SDKs/MacOSX10.11.sdk.tar.gz https://bitcoincore.org/depends-sources/sdks/MacOSX10.11.sdk.tar.gz
          tar -C depends/SDKs -xf depends/SDKs/MacOSX10.11.sdk.tar.gz
      - name: Build Dependencies
        run: make -C depends HOST=${{ env.host }}
      - name: Build cyberdollar
        run: |
          ./autogen.sh
          ./configure --prefix=$(pwd)/depends/${{ env.host }} --enable-gui=qt5 --enable-reduce-exports
          make deploy
          mv cyberdollar-Core.dmg cyberdollar.dmg
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-binaries
          path: cyberdollar.dmg
